@article{Alicherry2012,
	abstract = {We consider resource allocation algorithms for distributed cloud systems, which deploy cloud-computing resources that are geographically distributed over a large number of locations in a wide-area network. This distribution of cloud-computing resources over many locations in the network may be done for several reasons, such as to locate resources closer to users, to reduce bandwidth costs, to increase availability, etc. To get the maximum benefit from a distributed cloud system, we need efficient algorithms for resource allocation which minimize communication costs and latency. In this paper, we develop efficient resource allocation algorithms for use in distributed clouds. Our contributions are as follows: Assuming that users specify their resource needs, such as the number of virtual machines needed for a large computational task, we develop an efficient 2-approximation algorithm for the optimal selection of data centers in the distributed cloud. Our objective is to minimize the maximum distance, or latency, between the selected data centers. Next, we consider use of a similar algorithm to select, within each data center, the racks and servers where the requested virtual machines for the task will be located. Since the network inside a data center is structured and typically a tree, we make use of this structure to develop an optimal algorithm for rack and server selection. Finally, we develop a heuristic for partitioning the requested resources for the task amongst the chosen data centers and racks. We use simulations to evaluate the performance of our algorithms over example distributed cloud systems and find that our algorithms provide significant gains over other simpler allocation algorithms.},
	author = {Alicherry, Mansoor and Lakshman, T. V.},
	doi = {10.1109/INFCOM.2012.6195847},
	isbn = {9781467307758},
	issn = {0743166X},
	journal = {Proceedings - IEEE INFOCOM},
	pages = {963--971},
	title = {{Network aware resource allocation in distributed clouds}},
	year = {2012}
}

@misc{AskUbuntu2011,
	annote = {NULL},
	author = {AskUbuntu and Rmano},
	title = {{How to correctly create a virtual file system?}},
	url = {http://askubuntu.com/questions/87817/how-to-correctly-create-a-virtual-file-system},
	urldate = {2017-03-14},
	year = {2011}
}

@article{Biran2012,
	abstract = {Virtual Machine (VM) placement has to carefully consider the aggregated resource consumption of co-located VMs in order to obey service level agreements at lower possible cost. In this paper, we focus on satisfying the traffic demands of the VMs in addition to CPU and memory requirements. This is a much more complex problem both due to its quadratic nature (being the communication between a pair of VMs) and since it involves many factors beyond the physical host, like the network topologies and the routing scheme. Moreover, traffic patterns may vary over time and predicting the resulting effect on the actual available bandwidth between hosts within the data center is extremely difficult. We address this problem by trying to allocate a placement that not only satisfies the predicted communication demand but is also resilient to demand time-variations. This gives rise to a new optimization problem that we call the Min Cut Ratio-aware VM Placement (MCRVMP). The general MCRVMP problem is NP-Hard, hence, we introduce several heuristics to solve it in reasonable time. We present extensive experimental results, associated with both placement computation and run-time performance under time-varying traffic demands, to show that our heuristics provide good results (compared to the optimal solution) for medium size data centers.},
	author = {Biran, Ofer and Corradi, Antonio and Fanelli, Mario and Foschini, Luca and Nus, Alexander and Raz, Danny and Silvera, Ezra},
	doi = {10.1109/CCGrid.2012.119},
	isbn = {9780769546919},
	journal = {Proceedings - 12th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing, CCGrid 2012},
	keywords = {Cloud Computing,Data Center Networking,Min Cut Ratio,Network-Aware VM Placement},
	pages = {498--506},
	pmid = {6217459},
	title = {{A stable network-aware VM placement for cloud systems}},
	year = {2012}
}

@article{Bobroff2007,
	abstract = {A dynamic server migration and consolidation algorithm is introduced. The algorithm is shown to provide substantial improvement over static server consolidation in reducing the amount of required capacity and the rate of service level agreement violations. Benefits accrue for workloads that are variable and can be forecast over intervals shorter than the time scale of demand variability. The management algorithm reduces the amount of physical capacity required to support a specified rate of SLA violations for a given workload by as much as 50{\%} as compared to static consolidation approach. Another result is that the rate of SLA violations at fixed capacity may be reduced by up to 20{\%}. The results are based on hundreds of production workload traces across a variety of operating systems, applications, and industries.},
	author = {Bobroff, Norman and Kochut, Andrzej and Beaty, Kirk},
	doi = {10.1109/INM.2007.374776},
	isbn = {1424407990},
	issn = {1-4244-0798-2},
	journal = {10th IFIP/IEEE International Symposium on Integrated Network Management 2007, IM '07},
	pages = {119--128},
	pmid = {20210421},
	title = {{Dynamic placement of virtual machines for managing SLA violations}},
	volume = {5},
	year = {2007}
}
@misc{Cathey2017,
	abstract = {Stabilization cycle brings greater scalability and performance in one platform to integrate and manage virtual machines, bare metal and containers},
	author = {Cathey, Robert and Sell, Lauren},
	title = {{OpenStack{\textregistered} Ocata Strengthens Core Infrastructure Services and Container Integration with 15th Release of Cloud Computing Software}},
	url = {https://www.openstack.org/news/view/302/openstack-ocata-strengthens-core-infrastructure-services-and-container-integration-with-15th-release-of-cloud-computing-software},
	urldate = {2017-02-26},
	year = {2017}
}
@article{Metwally2015,
	abstract = {Current data center designs suffer from poor resource utilization. Several research works have addressed the data center resource allocation problem, and recent proposals have focused on network resource utilization as a bottleneck problem in data centers. However, little attention has been paid to manage the convergence of networking and other infrastructure resources. In this paper, we present a solution for improving data center's resource utilization. We introduce a unified cloud resource representation model and build a general resources repository using that model. We define a combined controller to manipulate infrastructure resources collected in the repository. A joint optimization model that performs the resource allocation as the main controller operation is also presented. This model represents the integration of semantic similarity and closeness centrality concepts and is formulated on a two-phase Mixed Integer Linear Programming (MILP-2P-IaaS): (i) mapping of hosting resources, and (ii) connectivity composition. Simulation results show that the (MILP-2P-IaaS) resource allocation approach improves data center's resource utilization and outperforms other benchmarks in terms of resource utilization and acceptance ratio.},
	author = {Metwally, Khaled and Jarray, Abdallah and Karmouch, Ahmed},
	doi = {10.1109/CLOUD.2015.152},
	isbn = {9781467372879},
	journal = {Proceedings - 2015 IEEE 8th International Conference on Cloud Computing, CLOUD 2015},
	keywords = {Closeness Centrality,Cloud IaaS,MILP,Network Virtualization,Resource Allocation,Resource Management,Semantic Similarity},
	pages = {1058--1062},
	title = {{MILP-Based Approach for Efficient Cloud IaaS Resource Allocation}},
	year = {2015}
}
@incollection{Simoens2016,
	author = {Simoens, Pieter},
	booktitle = {Systeemontwerp},
	chapter = {Cloud Comp},
	pages = {367 -- 489},
	title = {{Cloud Computing}},
	year = {2016}
}
@inproceedings{Maenhaut2017,
	abstract = {With cloud computing, efficient resource management is of great importance, as it has a direct impact on the scalability of the cloud application, and can result in significant energy and cost reductions. In recent years, a lot of research has been done regarding the management of cloud resources, resulting in multiple novel resource allocation strategies. Validation of these strategies however is often only based on simulations, as large experiments using real cloud infrastructure are both expensive and time-consuming. In this demo we present RPiaaS, a low-cost and energy-efficient cloud testbed built using Raspberry Pi's. The testbed provides an easy-to-use environment for the initial evaluation of novel cloud resource management strategies, and is designed to facilitate the step from simulations towards experimental evaluations on larger cloud testbeds.},
	address = {Atlanta, GA, USA},
	author = {Maenhaut, Pieter-jan and Volckaert, Bruno and Ongenae, Veerle and Turck, Filip De},
	booktitle = {IEEE INFOCOM},
	title = {{Demo Abstract : RPiaaS : A Raspberry Pi Testbed for Validation of Cloud Resource Management Strategies}},
	year = {2017}
}